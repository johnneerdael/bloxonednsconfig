# coding: utf-8

"""
    DNS Configuration API

    The DNS application is a BloxOne DDI service that provides cloud-based DNS configuration with on-prem host serving DNS protocol. It is part of the full-featured BloxOne DDI solution that enables customers the ability to deploy large numbers of protocol servers in the delivery of DNS and DHCP throughout their enterprise network.    # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import bloxonednsconfig
from bloxonednsconfig.api.auth_zone_api import AuthZoneApi  # noqa: E501
from bloxonednsconfig.rest import ApiException


class TestAuthZoneApi(unittest.TestCase):
    """AuthZoneApi unit test stubs"""

    def setUp(self):
        self.api = bloxonednsconfig.api.auth_zone_api.AuthZoneApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_auth_zone_create(self):
        """Test case for auth_zone_create

        Create the Auth Zone object.  # noqa: E501
        """
        pass

    def test_auth_zone_delete(self):
        """Test case for auth_zone_delete

        Delete the Auth Zone object.  # noqa: E501
        """
        pass

    def test_auth_zone_list(self):
        """Test case for auth_zone_list

        List Auth Zone objects.  # noqa: E501
        """
        pass

    def test_auth_zone_read(self):
        """Test case for auth_zone_read

        Read the Auth Zone object.  # noqa: E501
        """
        pass

    def test_auth_zone_update(self):
        """Test case for auth_zone_update

        Update the Auth Zone object.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
